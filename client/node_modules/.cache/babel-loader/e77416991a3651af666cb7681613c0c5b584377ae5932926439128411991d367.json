{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIDDH\\\\Desktop\\\\friend project\\\\client\\\\src\\\\context\\\\NotificationsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { useAuth } from \"./AuthContext\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationsContext = /*#__PURE__*/createContext(null);\nexport const NotificationsProvider = ({\n  children\n}) => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [pendingRequests, setPendingRequests] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const {\n    user\n  } = useAuth();\n  useEffect(() => {\n    if (user) {\n      console.log(\"Setting up socket connection for user:\", user);\n      const newSocket = io(\"http://localhost:7777\");\n      setSocket(newSocket);\n      newSocket.on(\"connect\", () => {\n        console.log(\"Socket connected, emitting user_connected\");\n        const userId = JSON.parse(atob(user.split(\".\")[1])).userId;\n        newSocket.emit(\"user_connected\", userId);\n      });\n      newSocket.on(\"notifications\", data => {\n        console.log(\"Received notifications:\", data);\n        setNotifications(data);\n      });\n      newSocket.on(\"pending_requests\", data => {\n        console.log(\"Received pending requests:\", data);\n        setPendingRequests(data);\n      });\n      newSocket.on(\"new_friend_request\", data => {\n        console.log(\"Received new friend request:\", data);\n        setNotifications(prev => [data, ...prev]);\n        fetchPendingRequests();\n      });\n      fetchPendingRequests();\n      return () => {\n        console.log(\"Cleaning up socket connection\");\n        newSocket.close();\n      };\n    }\n  }, [user]);\n  const fetchPendingRequests = async () => {\n    try {\n      const response = await axios.get(\"/api/friends/requests\", {\n        headers: {\n          \"x-auth-token\": user\n        }\n      });\n      console.log(\"Fetched pending requests:\", response.data);\n      setPendingRequests(response.data);\n    } catch (error) {\n      console.error(\"Error fetching pending requests:\", error);\n    }\n  };\n  const markAsRead = async notificationId => {\n    try {\n      await axios.put(`/api/notifications/${notificationId}/read`, {}, {\n        headers: {\n          \"x-auth-token\": user\n        }\n      });\n      setNotifications(prev => prev.map(n => n._id === notificationId ? {\n        ...n,\n        read: true\n      } : n));\n    } catch (error) {\n      console.error(\"Error marking notification as read:\", error);\n    }\n  };\n  const clearAllNotifications = async () => {\n    try {\n      await axios.delete(\"/api/notifications/clear\", {\n        headers: {\n          \"x-auth-token\": user\n        }\n      });\n      setNotifications([]);\n    } catch (error) {\n      console.error(\"Error clearing notifications:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationsContext.Provider, {\n    value: {\n      notifications,\n      pendingRequests,\n      markAsRead,\n      clearAllNotifications\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationsProvider, \"lG/IjdXbXLwd+Fh2hjfnuP6LFjU=\", false, function () {\n  return [useAuth];\n});\n_c = NotificationsProvider;\nexport const useNotifications = () => {\n  _s2();\n  return useContext(NotificationsContext);\n};\n_s2(useNotifications, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"NotificationsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","io","useAuth","axios","jsxDEV","_jsxDEV","NotificationsContext","NotificationsProvider","children","_s","notifications","setNotifications","pendingRequests","setPendingRequests","socket","setSocket","user","console","log","newSocket","on","userId","JSON","parse","atob","split","emit","data","prev","fetchPendingRequests","close","response","get","headers","error","markAsRead","notificationId","put","map","n","_id","read","clearAllNotifications","delete","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useNotifications","_s2","$RefreshReg$"],"sources":["C:/Users/SIDDH/Desktop/friend project/client/src/context/NotificationsContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nconst NotificationsContext = createContext(null);\r\n\r\nexport const NotificationsProvider = ({ children }) => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [socket, setSocket] = useState(null);\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      console.log(\"Setting up socket connection for user:\", user);\r\n      const newSocket = io(\"http://localhost:7777\");\r\n      setSocket(newSocket);\r\n\r\n      newSocket.on(\"connect\", () => {\r\n        console.log(\"Socket connected, emitting user_connected\");\r\n        const userId = JSON.parse(atob(user.split(\".\")[1])).userId;\r\n        newSocket.emit(\"user_connected\", userId);\r\n      });\r\n\r\n      newSocket.on(\"notifications\", (data) => {\r\n        console.log(\"Received notifications:\", data);\r\n        setNotifications(data);\r\n      });\r\n\r\n      newSocket.on(\"pending_requests\", (data) => {\r\n        console.log(\"Received pending requests:\", data);\r\n        setPendingRequests(data);\r\n      });\r\n\r\n      newSocket.on(\"new_friend_request\", (data) => {\r\n        console.log(\"Received new friend request:\", data);\r\n        setNotifications((prev) => [data, ...prev]);\r\n        fetchPendingRequests();\r\n      });\r\n\r\n      fetchPendingRequests();\r\n\r\n      return () => {\r\n        console.log(\"Cleaning up socket connection\");\r\n        newSocket.close();\r\n      };\r\n    }\r\n  }, [user]);\r\n\r\n  const fetchPendingRequests = async () => {\r\n    try {\r\n      const response = await axios.get(\"/api/friends/requests\", {\r\n        headers: { \"x-auth-token\": user },\r\n      });\r\n      console.log(\"Fetched pending requests:\", response.data);\r\n      setPendingRequests(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching pending requests:\", error);\r\n    }\r\n  };\r\n\r\n  const markAsRead = async (notificationId) => {\r\n    try {\r\n      await axios.put(\r\n        `/api/notifications/${notificationId}/read`,\r\n        {},\r\n        {\r\n          headers: { \"x-auth-token\": user },\r\n        }\r\n      );\r\n      setNotifications((prev) =>\r\n        prev.map((n) => (n._id === notificationId ? { ...n, read: true } : n))\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error marking notification as read:\", error);\r\n    }\r\n  };\r\n\r\n  const clearAllNotifications = async () => {\r\n    try {\r\n      await axios.delete(\"/api/notifications/clear\", {\r\n        headers: { \"x-auth-token\": user },\r\n      });\r\n      setNotifications([]);\r\n    } catch (error) {\r\n      console.error(\"Error clearing notifications:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <NotificationsContext.Provider\r\n      value={{\r\n        notifications,\r\n        pendingRequests,\r\n        markAsRead,\r\n        clearAllNotifications,\r\n      }}\r\n    >\r\n      {children}\r\n    </NotificationsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useNotifications = () => useContext(NotificationsContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}