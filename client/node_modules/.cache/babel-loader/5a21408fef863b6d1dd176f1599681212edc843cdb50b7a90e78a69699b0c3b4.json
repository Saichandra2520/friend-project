{"ast":null,"code":"import React,{createContext,useState,useContext}from\"react\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(localStorage.getItem(\"token\"));const register=async(username,email,password)=>{try{console.log(\"Attempting registration with:\",{username,email});// Debug log\nconst res=await axios.post(\"http://localhost:7777/api/auth/register\",{username,email,password},{headers:{\"Content-Type\":\"application/json\"}});console.log(\"Registration response:\",res.data);// Debug log\nif(res.data.token){localStorage.setItem(\"token\",res.data.token);setUser(res.data.token);return true;}else{throw new Error(\"No token received\");}}catch(error){console.error(\"Registration error:\",error.response||error);throw error;}};const login=async(email,password)=>{try{const res=await axios.post(\"http://localhost:7777/api/auth/login\",{email,password},{headers:{\"Content-Type\":\"application/json\"}});if(res.data.token){localStorage.setItem(\"token\",res.data.token);setUser(res.data.token);return true;}}catch(error){console.error(\"Login error:\",error.response||error);throw error;}};const logout=()=>{localStorage.removeItem(\"token\");setUser(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,register,logout},children:children});};export const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useState","useContext","axios","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","localStorage","getItem","register","username","email","password","console","log","res","post","headers","data","token","setItem","Error","error","response","login","logout","removeItem","Provider","value","useAuth"],"sources":["C:/Users/SIDDH/Desktop/friend project/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(localStorage.getItem(\"token\"));\r\n\r\n  const register = async (username, email, password) => {\r\n    try {\r\n      console.log(\"Attempting registration with:\", { username, email }); // Debug log\r\n      const res = await axios.post(\r\n        \"http://localhost:7777/api/auth/register\",\r\n        {\r\n          username,\r\n          email,\r\n          password,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log(\"Registration response:\", res.data); // Debug log\r\n\r\n      if (res.data.token) {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        setUser(res.data.token);\r\n        return true;\r\n      } else {\r\n        throw new Error(\"No token received\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Registration error:\", error.response || error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"http://localhost:7777/api/auth/login\",\r\n        {\r\n          email,\r\n          password,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (res.data.token) {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        setUser(res.data.token);\r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error.response || error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CAClE,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,IAAI,CAAC,CAEvC,MAAO,MAAM,CAAAO,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAACW,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAE/D,KAAM,CAAAC,QAAQ,CAAG,KAAAA,CAAOC,QAAQ,CAAEC,KAAK,CAAEC,QAAQ,GAAK,CACpD,GAAI,CACFC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAE,CAAEJ,QAAQ,CAAEC,KAAM,CAAC,CAAC,CAAE;AACnE,KAAM,CAAAI,GAAG,CAAG,KAAM,CAAAjB,KAAK,CAACkB,IAAI,CAC1B,yCAAyC,CACzC,CACEN,QAAQ,CACRC,KAAK,CACLC,QACF,CAAC,CACD,CACEK,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CACF,CAAC,CAEDJ,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEC,GAAG,CAACG,IAAI,CAAC,CAAE;AAEjD,GAAIH,GAAG,CAACG,IAAI,CAACC,KAAK,CAAE,CAClBZ,YAAY,CAACa,OAAO,CAAC,OAAO,CAAEL,GAAG,CAACG,IAAI,CAACC,KAAK,CAAC,CAC7Cb,OAAO,CAACS,GAAG,CAACG,IAAI,CAACC,KAAK,CAAC,CACvB,MAAO,KAAI,CACb,CAAC,IAAM,CACL,KAAM,IAAI,CAAAE,KAAK,CAAC,mBAAmB,CAAC,CACtC,CACF,CAAE,MAAOC,KAAK,CAAE,CACdT,OAAO,CAACS,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAACC,QAAQ,EAAID,KAAK,CAAC,CAC7D,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,KAAM,CAAAE,KAAK,CAAG,KAAAA,CAAOb,KAAK,CAAEC,QAAQ,GAAK,CACvC,GAAI,CACF,KAAM,CAAAG,GAAG,CAAG,KAAM,CAAAjB,KAAK,CAACkB,IAAI,CAC1B,sCAAsC,CACtC,CACEL,KAAK,CACLC,QACF,CAAC,CACD,CACEK,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CACF,CAAC,CAED,GAAIF,GAAG,CAACG,IAAI,CAACC,KAAK,CAAE,CAClBZ,YAAY,CAACa,OAAO,CAAC,OAAO,CAAEL,GAAG,CAACG,IAAI,CAACC,KAAK,CAAC,CAC7Cb,OAAO,CAACS,GAAG,CAACG,IAAI,CAACC,KAAK,CAAC,CACvB,MAAO,KAAI,CACb,CACF,CAAE,MAAOG,KAAK,CAAE,CACdT,OAAO,CAACS,KAAK,CAAC,cAAc,CAAEA,KAAK,CAACC,QAAQ,EAAID,KAAK,CAAC,CACtD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,KAAM,CAAAG,MAAM,CAAGA,CAAA,GAAM,CACnBlB,YAAY,CAACmB,UAAU,CAAC,OAAO,CAAC,CAChCpB,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAED,mBACEN,IAAA,CAACC,WAAW,CAAC0B,QAAQ,EAACC,KAAK,CAAE,CAAEvB,IAAI,CAAEmB,KAAK,CAAEf,QAAQ,CAAEgB,MAAO,CAAE,CAAArB,QAAA,CAC5DA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAyB,OAAO,CAAGA,CAAA,GAAMhC,UAAU,CAACI,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}