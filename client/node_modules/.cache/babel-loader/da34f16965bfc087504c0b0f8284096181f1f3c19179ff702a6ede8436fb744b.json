{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIDDH\\\\Desktop\\\\friend project\\\\client\\\\src\\\\components\\\\UserCard.js\";\nimport React from \"react\";\nimport { Card, CardContent, Typography, Button, Stack, Avatar, Chip } from \"@mui/material\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserCard = ({\n  user,\n  onAction,\n  actionText,\n  actionColor = \"primary\",\n  mutualFriends\n}) => {\n  var _user$interests;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    sx: {\n      mb: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          flex: 1,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), mutualFriends > 0 && /*#__PURE__*/_jsxDEV(Chip, {\n            label: `${mutualFriends} mutual friend${mutualFriends > 1 ? \"s\" : \"\"}`,\n            size: \"small\",\n            variant: \"outlined\",\n            sx: {\n              mt: 0.5\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), ((_user$interests = user.interests) === null || _user$interests === void 0 ? void 0 : _user$interests.length) > 0 && /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            spacing: 1,\n            sx: {\n              mt: 1\n            },\n            children: user.interests.map((interest, index) => /*#__PURE__*/_jsxDEV(Chip, {\n              label: interest,\n              size: \"small\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: actionColor,\n          size: \"small\",\n          onClick: () => onAction(user._id),\n          children: actionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = UserCard;\nexport default UserCard;\nvar _c;\n$RefreshReg$(_c, \"UserCard\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Button","Stack","Avatar","Chip","PersonIcon","jsxDEV","_jsxDEV","UserCard","user","onAction","actionText","actionColor","mutualFriends","_user$interests","variant","sx","mb","children","direction","alignItems","spacing","fileName","_jsxFileName","lineNumber","columnNumber","flex","username","label","size","mt","interests","length","map","interest","index","color","onClick","_id","_c","$RefreshReg$"],"sources":["C:/Users/SIDDH/Desktop/friend project/client/src/components/UserCard.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Stack,\r\n  Avatar,\r\n  Chip,\r\n} from \"@mui/material\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\n\r\nconst UserCard = ({\r\n  user,\r\n  onAction,\r\n  actionText,\r\n  actionColor = \"primary\",\r\n  mutualFriends,\r\n}) => {\r\n  return (\r\n    <Card variant=\"outlined\" sx={{ mb: 1 }}>\r\n      <CardContent>\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n          <Avatar>\r\n            <PersonIcon />\r\n          </Avatar>\r\n          <Stack flex={1}>\r\n            <Typography variant=\"subtitle1\">{user.username}</Typography>\r\n            {mutualFriends > 0 && (\r\n              <Chip\r\n                label={`${mutualFriends} mutual friend${\r\n                  mutualFriends > 1 ? \"s\" : \"\"\r\n                }`}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                sx={{ mt: 0.5 }}\r\n              />\r\n            )}\r\n            {user.interests?.length > 0 && (\r\n              <Stack direction=\"row\" spacing={1} sx={{ mt: 1 }}>\r\n                {user.interests.map((interest, index) => (\r\n                  <Chip key={index} label={interest} size=\"small\" />\r\n                ))}\r\n              </Stack>\r\n            )}\r\n          </Stack>\r\n          <Button\r\n            variant=\"contained\"\r\n            color={actionColor}\r\n            size=\"small\"\r\n            onClick={() => onAction(user._id)}\r\n          >\r\n            {actionText}\r\n          </Button>\r\n        </Stack>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}